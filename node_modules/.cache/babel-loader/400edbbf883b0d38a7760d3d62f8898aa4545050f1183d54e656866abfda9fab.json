{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\Projects\\\\REACT\\\\power-plant-monitoring-dashboard\\\\src\\\\components\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PowerCard from './PowerCard';\nimport { Container, Typography, Grid, Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [powerData, setPowerData] = useState({\n    voltage: 0,\n    current: 0,\n    temperature: 0,\n    pressure: 0\n  });\n  const [showVoltage, setShowVoltage] = useState(true);\n  const [showCurrent, setShowCurrent] = useState(true);\n  const fetchRealTimeData = () => {\n    const newData = {\n      voltage: Math.random() * 100,\n      current: Math.random() * 50,\n      temperature: Math.random() * 50 + 50,\n      pressure: Math.random() * 20 + 20\n    };\n    setPowerData(newData);\n  };\n  useEffect(() => {\n    fetchRealTimeData();\n    const interval = setInterval(fetchRealTimeData, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      color: \"green\",\n      gutterBottom: true,\n      children: \"Power Plant Monitoring Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(PowerCard, {\n        title: \"Voltage\",\n        value: `${powerData.voltage.toFixed(2)} V`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PowerCard, {\n        title: \"Current\",\n        value: `${powerData.current.toFixed(2)} A`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PowerCard, {\n        title: \"Temperature\",\n        value: `${powerData.temperature.toFixed(2)} °C`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PowerCard, {\n        title: \"Pressure\",\n        value: `${powerData.pressure.toFixed(2)} bar`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => setShowVoltage(!showVoltage),\n      children: \"Toggle Voltage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: () => setShowCurrent(!showCurrent),\n      children: \"Toggle Current\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"YaXlx+g8I1jMSIspVzWIHiCNB9c=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","PowerCard","Container","Typography","Grid","Button","jsxDEV","_jsxDEV","Dashboard","_s","powerData","setPowerData","voltage","current","temperature","pressure","showVoltage","setShowVoltage","showCurrent","setShowCurrent","fetchRealTimeData","newData","Math","random","interval","setInterval","clearInterval","children","variant","color","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","title","value","toFixed","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/Projects/REACT/power-plant-monitoring-dashboard/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useState , useEffect} from 'react';\r\nimport PowerCard from './PowerCard';\r\nimport { Container, Typography, Grid, Button } from '@mui/material';\r\n\r\nconst Dashboard = () => {\r\n\r\nconst[powerData,setPowerData]= useState({\r\n  voltage: 0,\r\n  current: 0,\r\n  temperature: 0,\r\n  pressure: 0,\r\n});\r\n\r\nconst [showVoltage, setShowVoltage] = useState(true);\r\n\r\nconst [showCurrent, setShowCurrent] = useState(true);\r\n\r\nconst fetchRealTimeData = () =>{\r\n\r\n  const newData = {\r\n    voltage : Math.random() * 100 ,\r\n    current : Math.random() * 50 ,\r\n    temperature : Math.random() * 50 + 50 ,\r\n    pressure : Math.random() * 20 + 20 \r\n  }\r\n\r\n  setPowerData(newData);\r\n\r\n}\r\n\r\nuseEffect(() => {\r\n  fetchRealTimeData();\r\n  const interval = setInterval(fetchRealTimeData, 1000);\r\n  return () => {\r\n    clearInterval(interval);\r\n  }\r\n},[]);\r\n\r\n\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h2\" color=\"green\" gutterBottom>\r\n        Power Plant Monitoring Dashboard\r\n      </Typography>\r\n\r\n      <Grid container spacing={3}>\r\n        <PowerCard title=\"Voltage\" value = {`${powerData.voltage.toFixed(2)} V`} />\r\n        <PowerCard title=\"Current\"  value = {`${powerData.current.toFixed(2)} A`} />\r\n        <PowerCard title=\"Temperature\" value = {`${powerData.temperature.toFixed(2)} °C`} />\r\n        <PowerCard title=\"Pressure\" value = {`${powerData.pressure.toFixed(2)} bar`} />\r\n      </Grid>\r\n\r\n      <Button variant=\"contained\" color=\"primary\" onClick={() => setShowVoltage(!showVoltage)}>\r\n        Toggle Voltage\r\n      </Button>\r\n      <Button variant=\"contained\" color=\"secondary\" onClick={() => setShowCurrent(!showCurrent)}>\r\n        Toggle Current\r\n      </Button>\r\n\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}