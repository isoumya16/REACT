{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\Projects\\\\REACT\\\\power-plant-monitoring-dashboard\\\\src\\\\components\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PowerCard from './PowerCard';\nimport { Container, Typography, Grid } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [powerData, setPowerData] = useState({\n    voltage: 0,\n    current: 0,\n    temperature: 0,\n    pressure: 0\n  });\n  const newData = {\n    voltage: Math.random() * 100,\n    current: Math.random() * 50,\n    temperature: Math.random() * 50 + 50,\n    pressure: Math.random() * 20 + 20\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      color: \"green\",\n      gutterBottom: true,\n      children: \"Power Plant Monitoring Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(PowerCard, {\n        title: \"Voltage\",\n        value: `${powerData.voltage.toFixed(2)} V`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PowerCard, {\n        title: \"Current\",\n        value: `${powerData.current.toFixed(2)} A`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PowerCard, {\n        title: \"Temperature\",\n        value: `${powerData.temperature.toFixed(2)} °C`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PowerCard, {\n        title: \"Pressure\",\n        value: `${powerData.pressure.toFixed(2)} bar`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"fpR2yAdbfGq/ntTLf2FRsQuGPw8=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","PowerCard","Container","Typography","Grid","jsxDEV","_jsxDEV","Dashboard","_s","powerData","setPowerData","voltage","current","temperature","pressure","newData","Math","random","children","variant","color","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","title","value","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/Projects/REACT/power-plant-monitoring-dashboard/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useState , useEffect} from 'react';\r\nimport PowerCard from './PowerCard';\r\nimport { Container, Typography, Grid } from '@mui/material';\r\n\r\nconst Dashboard = () => {\r\n\r\nconst[powerData,setPowerData]= useState({\r\n  voltage: 0,\r\n  current: 0,\r\n  temperature: 0,\r\n  pressure: 0,\r\n});\r\n\r\nconst newData = {\r\n  voltage : Math.random() * 100 ,\r\n  current : Math.random() * 50 ,\r\n  temperature : Math.random() * 50 + 50 ,\r\n  pressure : Math.random() * 20 + 20 \r\n}\r\n\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h2\" color=\"green\" gutterBottom>\r\n        Power Plant Monitoring Dashboard\r\n      </Typography>\r\n\r\n      <Grid container spacing={3}>\r\n        <PowerCard title=\"Voltage\" value = {`${powerData.voltage.toFixed(2)} V`} />\r\n        <PowerCard title=\"Current\"  value = {`${powerData.current.toFixed(2)} A`} />\r\n        <PowerCard title=\"Temperature\" value = {`${powerData.temperature.toFixed(2)} °C`} />\r\n        <PowerCard title=\"Pressure\" value = {`${powerData.pressure.toFixed(2)} bar`} />\r\n      </Grid>\r\n\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Dashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAGC,SAAS,QAAO,OAAO;AAClD,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,SAAS,EAAEC,UAAU,EAAEC,IAAI,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAExB,MAAK,CAACC,SAAS,EAACC,YAAY,CAAC,GAAEX,QAAQ,CAAC;IACtCY,OAAO,EAAE,CAAC;IACVC,OAAO,EAAE,CAAC;IACVC,WAAW,EAAE,CAAC;IACdC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAMC,OAAO,GAAG;IACdJ,OAAO,EAAGK,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;IAC7BL,OAAO,EAAGI,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE;IAC5BJ,WAAW,EAAGG,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE;IACrCH,QAAQ,EAAGE,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG;EAClC,CAAC;EAGC,oBACEX,OAAA,CAACJ,SAAS;IAAAgB,QAAA,gBACRZ,OAAA,CAACH,UAAU;MAACgB,OAAO,EAAC,IAAI;MAACC,KAAK,EAAC,OAAO;MAACC,YAAY;MAAAH,QAAA,EAAC;IAEpD;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAEbnB,OAAA,CAACF,IAAI;MAACsB,SAAS;MAACC,OAAO,EAAE,CAAE;MAAAT,QAAA,gBACzBZ,OAAA,CAACL,SAAS;QAAC2B,KAAK,EAAC,SAAS;QAACC,KAAK,EAAI,GAAGpB,SAAS,CAACE,OAAO,CAACmB,OAAO,CAAC,CAAC,CAAC;MAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3EnB,OAAA,CAACL,SAAS;QAAC2B,KAAK,EAAC,SAAS;QAAEC,KAAK,EAAI,GAAGpB,SAAS,CAACG,OAAO,CAACkB,OAAO,CAAC,CAAC,CAAC;MAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5EnB,OAAA,CAACL,SAAS;QAAC2B,KAAK,EAAC,aAAa;QAACC,KAAK,EAAI,GAAGpB,SAAS,CAACI,WAAW,CAACiB,OAAO,CAAC,CAAC,CAAC;MAAM;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpFnB,OAAA,CAACL,SAAS;QAAC2B,KAAK,EAAC,UAAU;QAACC,KAAK,EAAI,GAAGpB,SAAS,CAACK,QAAQ,CAACgB,OAAO,CAAC,CAAC,CAAC;MAAO;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEE,CAAC;AAEhB,CAAC;AAAAjB,EAAA,CAhCKD,SAAS;AAAAwB,EAAA,GAATxB,SAAS;AAkCf,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}